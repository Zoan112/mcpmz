{
  "firebase": {
    "name": "firebase",
    "display_name": "Firebase CLI Tools",
    "description": "A Model Context Protocol server for Firebase CLI tools, enabling AI assistants to interact with Firebase services including hosting, functions, database, authentication, and more.",
    "repository": {
      "type": "git",
      "url": "https://github.com/firebase/firebase-tools"
    },
    "homepage": "https://firebase.google.com/docs/cli",
    "author": {
      "name": "Daynemo Team"
    },
    "license": "MIT",
    "categories": [
      "Web Services",
      "Dev Tools"
    ],
    "tags": [
      "firebase",
      "google-cloud",
      "hosting",
      "functions",
      "database",
      "authentication",
      "deployment"
    ],
    "installations": {
      "npm": {
        "type": "npm",
        "command": "npx",
        "args": [
          "-y",
          "firebase-tools@latest",
          "experimental:mcp"
        ],
        "description": "Run Firebase CLI with experimental MCP support",
        "recommended": true
      }
    },
    "arguments": {},
    "examples": [
      {
        "title": "Initialize Firebase Project",
        "description": "Initialize a new Firebase project in the current directory",
        "prompt": "Initialize a new Firebase project with hosting and functions"
      },
      {
        "title": "Deploy to Firebase",
        "description": "Deploy your project to Firebase hosting and functions",
        "prompt": "Deploy my current project to Firebase"
      },
      {
        "title": "List Firebase Projects",
        "description": "Show all Firebase projects associated with your account",
        "prompt": "List all my Firebase projects"
      },
      {
        "title": "Check Firebase Status",
        "description": "Check the status of Firebase services",
        "prompt": "Check the current status of my Firebase project"
      },
      {
        "title": "Manage Firebase Functions",
        "description": "Deploy or manage Firebase Cloud Functions",
        "prompt": "Deploy my Firebase functions"
      },
      {
        "title": "Firebase Database Operations",
        "description": "Interact with Firestore or Realtime Database",
        "prompt": "Show me the structure of my Firestore database"
      },
      {
        "title": "Firebase Hosting",
        "description": "Manage Firebase hosting configuration and deployment",
        "prompt": "Deploy my website to Firebase hosting"
      },
      {
        "title": "Authentication Setup",
        "description": "Configure Firebase Authentication",
        "prompt": "Set up Firebase Authentication for my project"
      }
    ],
    "setup_instructions": [
      "Run 'npx -y firebase-tools@latest login --reauth' to authenticate with your Google account",
      "Ensure you have the necessary Firebase project permissions",
      "Configure your project using 'firebase init' if not already done"
    ],
    "is_official": true
  },
  "context7": {
    "name": "context7",
    "display_name": "Context7",
    "description": "A Model Context Protocol server for Context7, enabling AI assistants to interact with advanced context management and semantic search capabilities.",
    "repository": {
      "type": "git",
      "url": "https://github.com/upstash/context7-mcp"
    },
    "homepage": "https://upstash.com/docs/context7",
    "author": {
      "name": "Upstash"
    },
    "license": "MIT",
    "categories": [
      "Data Management",
      "AI/ML"
    ],
    "tags": [
      "context",
      "semantic-search",
      "upstash",
      "vector-database",
      "embeddings"
    ],
    "installations": {
      "npm": {
        "type": "npm",
        "command": "npx",
        "args": [
          "-y",
          "@upstash/context7-mcp"
        ],
        "description": "Run Context7 MCP server",
        "recommended": true
      }
    },
    "arguments": {},
    "examples": [
      {
        "title": "Initialize Context7",
        "description": "Set up Context7 for your project",
        "prompt": "Initialize Context7 for managing my project context"
      },
      {
        "title": "Add Context",
        "description": "Add new context or documents to Context7",
        "prompt": "Add this document to my Context7 knowledge base"
      },
      {
        "title": "Search Context",
        "description": "Search through your stored context",
        "prompt": "Search my Context7 for information about authentication"
      },
      {
        "title": "Manage Collections",
        "description": "Create and manage Context7 collections",
        "prompt": "Create a new collection in Context7 for my project documentation"
      }
    ],
    "setup_instructions": [
      "Configure your Upstash credentials",
      "Set up your Context7 project configuration",
      "Ensure you have the necessary API keys configured"
    ],
    "is_official": true
  },
  "ahrefs-zohar": {
    "name": "ahrefs",
    "display_name": "Ahrefs",
    "description": "Ahrefs Model Context Protocol Server for SEO and backlink analysis.",
    "repository": {
      "type": "git",
      "url": "https://github.com/ahrefs/mcp"
    },
    "author": {
      "name": "ahrefs"
    },
    "license": "MIT",
    "categories": [
      "SEO",
      "Analytics"
    ],
    "tags": [
      "SEO",
      "Backlinks", 
      "Analytics",
      "API"
    ],
    "arguments": {
      "API_KEY": {
        "description": "Ahrefs API key for authenticating with the Ahrefs API",
        "required": true,
        "example": "YOUR_API_KEY_HERE"
      }
    },
    "installations": {
      "npm": {
        "type": "npm",
        "command": "npx",
        "args": [
          "@ahrefs/mcp"
        ],
        "env": {
          "API_KEY": "${API_KEY}"
        },
        "description": "Run with npx (requires npm install)"
      }
    },
    "homepage": "https://github.com/ahrefs/mcp"
  },
  "playwright": {
    "name": "playwright",
    "display_name": "Microsoft Playwright",
    "description": "A Model Context Protocol server that provides browser automation capabilities using Playwright. Enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.",
    "repository": {
      "type": "git",
      "url": "https://github.com/microsoft/playwright-mcp"
    },
    "homepage": "https://playwright.dev",
    "author": {
      "name": "Microsoft"
    },
    "license": "MIT",
    "categories": [
      "Browser Automation",
      "Testing",
      "Web Scraping"
    ],
    "tags": [
      "playwright",
      "browser-automation",
      "testing",
      "web-scraping",
      "accessibility",
      "microsoft",
      "automation"
    ],
    "installations": {
      "npm": {
        "type": "npm",
        "command": "npx",
        "args": [
          "@playwright/mcp@latest"
        ],
        "description": "Run Microsoft Playwright MCP server",
        "recommended": true
      }
    },
    "arguments": {
      "browser": {
        "description": "Browser or chrome channel to use (chrome, firefox, webkit, msedge, chrome-beta, etc.)",
        "required": false,
        "type": "string",
        "default": "chrome"
      },
      "headless": {
        "description": "Run browser in headless mode",
        "required": false,
        "type": "boolean",
        "default": false
      },
      "vision": {
        "description": "Run server that uses screenshots instead of accessibility snapshots",
        "required": false,
        "type": "boolean",
        "default": false
      },
      "port": {
        "description": "Port to listen on for SSE transport",
        "required": false,
        "type": "number"
      },
      "user-data-dir": {
        "description": "Path to the user data directory",
        "required": false,
        "type": "string"
      }
    },
    "examples": [
      {
        "title": "Web Navigation",
        "description": "Navigate to websites and interact with page elements",
        "prompt": "Navigate to google.com and search for 'Model Context Protocol'"
      },
      {
        "title": "Form Filling",
        "description": "Automatically fill out web forms",
        "prompt": "Fill out the contact form on this website with the provided information"
      },
      {
        "title": "Data Extraction",
        "description": "Extract structured data from web pages",
        "prompt": "Extract all product names and prices from this e-commerce page"
      },
      {
        "title": "Screenshot Capture",
        "description": "Take screenshots of web pages",
        "prompt": "Take a screenshot of the current page and save it"
      },
      {
        "title": "Automated Testing",
        "description": "Perform automated testing of web applications",
        "prompt": "Test the login functionality by entering credentials and verifying the result"
      },
      {
        "title": "Tab Management",
        "description": "Manage browser tabs and navigate between them",
        "prompt": "Open three new tabs with different websites and switch between them"
      }
    ],
    "setup_instructions": [
      "Ensure Node.js is installed on your system",
      "Run 'npx @playwright/mcp@latest --install' if you get browser installation errors",
      "The server will create a persistent browser profile for storing login sessions",
      "Use --headless flag for background operations or --vision flag for screenshot-based interactions"
    ],
    "is_official": true
  }
}